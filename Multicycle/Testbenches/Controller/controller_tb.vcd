$date
	Sat Aug 31 23:05:35 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module controller_tb $end
$var wire 1 ! regwrite $end
$var wire 1 " regdst $end
$var wire 2 # pcsrc [1:0] $end
$var wire 1 $ pcen $end
$var wire 1 % memwrite $end
$var wire 1 & memtoreg $end
$var wire 1 ' irwrite $end
$var wire 1 ( iord $end
$var wire 2 ) alusrcb [1:0] $end
$var wire 1 * alusrca $end
$var wire 3 + alucontrol [2:0] $end
$var reg 1 , clk $end
$var reg 6 - funct [5:0] $end
$var reg 32 . instr [31:0] $end
$var reg 6 / op [5:0] $end
$var reg 1 0 reset $end
$var reg 1 1 zero $end
$scope module uut $end
$var wire 1 , clk $end
$var wire 6 2 funct [5:0] $end
$var wire 6 3 op [5:0] $end
$var wire 1 $ pcen $end
$var wire 1 0 reset $end
$var wire 1 1 zero $end
$var wire 1 ! regwrite $end
$var wire 1 " regdst $end
$var wire 1 4 pcwrite $end
$var wire 2 5 pcsrc [1:0] $end
$var wire 1 % memwrite $end
$var wire 1 & memtoreg $end
$var wire 1 ' irwrite $end
$var wire 1 ( iord $end
$var wire 1 6 branch $end
$var wire 2 7 alusrcb [1:0] $end
$var wire 1 * alusrca $end
$var wire 2 8 aluop [1:0] $end
$var wire 3 9 alucontrol [2:0] $end
$scope module ad $end
$var wire 6 : funct [5:0] $end
$var wire 2 ; aluop [1:0] $end
$var reg 3 < alucontrol [2:0] $end
$upscope $end
$scope module md $end
$var wire 1 , clk $end
$var wire 6 = op [5:0] $end
$var wire 1 0 reset $end
$var wire 1 ! regwrite $end
$var wire 1 " regdst $end
$var wire 1 4 pcwrite $end
$var wire 2 > pcsrc [1:0] $end
$var wire 1 % memwrite $end
$var wire 1 & memtoreg $end
$var wire 1 ' irwrite $end
$var wire 1 ( iord $end
$var wire 1 6 branch $end
$var wire 2 ? alusrcb [1:0] $end
$var wire 1 * alusrca $end
$var wire 2 @ aluop [1:0] $end
$var parameter 6 A ADDI $end
$var parameter 5 B ADDIEXECUTE $end
$var parameter 5 C ADDIWRITEBACK $end
$var parameter 5 D ALUWRITEBACK $end
$var parameter 6 E BEQ $end
$var parameter 5 F BRANCH $end
$var parameter 5 G DECODE $end
$var parameter 5 H EXECUTE $end
$var parameter 5 I FETCH $end
$var parameter 6 J J $end
$var parameter 5 K JUMP $end
$var parameter 6 L LW $end
$var parameter 5 M MEMADR $end
$var parameter 5 N MEMRD $end
$var parameter 5 O MEMWB $end
$var parameter 5 P MEMWR $end
$var parameter 6 Q RTYPE $end
$var parameter 6 R SW $end
$var reg 17 S controls [16:0] $end
$var reg 5 T nextstate [4:0] $end
$var reg 5 U state [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101011 R
b0 Q
b101 P
b100 O
b11 N
b10 M
b100011 L
b1011 K
b10 J
b0 I
b110 H
b1 G
b1000 F
b100 E
b111 D
b1010 C
b1001 B
b1000 A
$end
#0
$dumpvars
b0 U
b1 T
b101000000010000 S
b0 @
b1 ?
b0 >
bx =
b10 <
b0 ;
bx :
b10 9
b0 8
b1 7
06
b0 5
14
bx 3
bx 2
01
10
bx /
bx .
bx -
0,
b10 +
0*
b1 )
0(
1'
0&
0%
1$
b0 #
0"
0!
$end
#1
1,
#2
b0 -
b0 2
b0 :
b0 /
b0 3
b0 =
0,
b0 .
#3
1,
#4
b101 -
b101 2
b101 :
b1000 /
b1000 3
b1000 =
0,
b100000000000100000000000000101 .
00
#5
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b1001 T
b1 U
1,
#6
0,
#7
b10 )
b10 7
b10 ?
1*
b10000100000 S
b1010 T
b1001 U
1,
#8
0,
#9
b0 )
b0 7
b0 ?
0*
1!
b100000000000 S
b0 T
b1010 U
1,
#10
0,
#11
1$
b1 )
b1 7
b1 ?
0!
1'
14
b101000000010000 S
b1 T
b0 U
1,
#12
b1100 -
b1100 2
b1100 :
0,
b100000000000110000000000001100 .
#13
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b1001 T
b1 U
1,
#14
0,
#15
b10 )
b10 7
b10 ?
1*
b10000100000 S
b1010 T
b1001 U
1,
#16
0,
#17
b0 )
b0 7
b0 ?
0*
1!
b100000000000 S
b0 T
b1010 U
1,
#18
b100101 -
b100101 2
b100101 :
b0 /
b0 3
b0 =
0,
b111000100010000000100101 .
#19
1$
b1 )
b1 7
b1 ?
0!
1'
14
b101000000010000 S
b1 T
b0 U
1,
#20
0,
#21
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b110 T
b1 U
1,
#22
0,
#23
b1 +
b1 9
b1 <
b10 8
b10 ;
b10 @
b0 )
b0 7
b0 ?
1*
b10000000010 S
b111 T
b110 U
1,
#24
0,
#25
b10 +
b10 9
b10 <
b0 8
b0 ;
b0 @
1"
0*
1!
b100001000000 S
b0 T
b111 U
1,
#26
b100100 -
b100100 2
b100100 :
0,
b11001000010100000100100 .
#27
1$
b1 )
b1 7
b1 ?
0"
0!
1'
14
b101000000010000 S
b1 T
b0 U
1,
#28
0,
#29
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b110 T
b1 U
1,
#30
0,
#31
b0 +
b0 9
b0 <
b10 8
b10 ;
b10 @
b0 )
b0 7
b0 ?
1*
b10000000010 S
b111 T
b110 U
1,
#32
0,
#33
b10 +
b10 9
b10 <
b0 8
b0 ;
b0 @
1"
0*
1!
b100001000000 S
b0 T
b111 U
1,
#34
b100000 -
b100000 2
b100000 :
0,
b101001000010100000100000 .
#35
1$
b1 )
b1 7
b1 ?
0"
0!
1'
14
b101000000010000 S
b1 T
b0 U
1,
#36
0,
#37
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b110 T
b1 U
1,
#38
0,
#39
b10 8
b10 ;
b10 @
b0 )
b0 7
b0 ?
1*
b10000000010 S
b111 T
b110 U
1,
#40
0,
#41
b0 8
b0 ;
b0 @
1"
0*
1!
b100001000000 S
b0 T
b111 U
1,
#42
0,
b100001010011100000100000 .
#43
1$
b1 )
b1 7
b1 ?
0"
0!
1'
14
b101000000010000 S
b1 T
b0 U
1,
#44
0,
#45
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b110 T
b1 U
1,
#46
0,
#47
b10 8
b10 ;
b10 @
b0 )
b0 7
b0 ?
1*
b10000000010 S
b111 T
b110 U
1,
#48
0,
#49
b0 8
b0 ;
b0 @
1"
0*
1!
b100001000000 S
b0 T
b111 U
1,
#50
b100010 -
b100010 2
b100010 :
0,
b111000100011100000100010 .
#51
1$
b1 )
b1 7
b1 ?
0"
0!
1'
14
b101000000010000 S
b1 T
b0 U
1,
#52
0,
#53
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b110 T
b1 U
1,
#54
0,
#55
b110 +
b110 9
b110 <
b10 8
b10 ;
b10 @
b0 )
b0 7
b0 ?
1*
b10000000010 S
b111 T
b110 U
1,
#56
0,
#57
b10 +
b10 9
b10 <
b0 8
b0 ;
b0 @
1"
0*
1!
b100001000000 S
b0 T
b111 U
1,
#58
b100 -
b100 2
b100 :
b101011 /
b101011 3
b101011 =
0,
b10101100011001110000000001000100 .
#59
1$
b1 )
b1 7
b1 ?
0"
0!
1'
14
b101000000010000 S
b1 T
b0 U
1,
#60
0,
#61
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b10 T
b1 U
1,
#62
0,
#63
b10 )
b10 7
b10 ?
1*
b10000100000 S
b101 T
b10 U
1,
#64
0,
#65
b0 )
b0 7
b0 ?
1(
0*
1%
b10000100000000 S
b0 T
b101 U
1,
#66
b10000 -
b10000 2
b10000 :
b100011 /
b100011 3
b100011 =
0,
b10001100000000100000000001010000 .
#67
1$
b1 )
b1 7
b1 ?
0(
1'
0%
14
b101000000010000 S
b1 T
b0 U
1,
#68
0,
#69
0$
b11 )
b11 7
b11 ?
0'
04
b110000 S
b10 T
b1 U
1,
#70
0,
#71
b10 )
b10 7
b10 ?
1*
b10000100000 S
b11 T
b10 U
1,
#72
0,
#73
b0 )
b0 7
b0 ?
1(
0*
b100000000 S
b100 T
b11 U
1,
#74
0,
#75
1&
0(
1!
b100010000000 S
b0 T
b100 U
1,
#76
0,
